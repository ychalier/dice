def convert(value, target_type):
    if target_type == type(0):
        return int(value)
    elif target_type == type(0.0):
        return float(value)
    elif target_type == type(True):
        return bool(value)
    elif target_type == type([]):
        return list(value)
    return value

class Parameters:

    SIMILARITY_THRESHOLD = .75
    REMARKABLE_ALPHA = 0.059448967077562524  # 0.2861481307916379
    TYPICAL_ALPHA = 0.9971180906371417  # 0.9982891056446265
    TYPICAL_BETA = 0.9441667556171077  # 0.0009590134436654157
    PLAUSIBLE_ALPHA = 0.6166077183908046  # 0.3420266845860523
    PLAUSIBLE_BETA = 0.1789939630686016  # 0.6786119833435241
    ASSIGNMENT_METHOD = 1
    TAXONOMY_BUILDER = "webisalod"
    TAXONOMY_BUILDER_LOWS_THRESHOLD = 10
    TAXONOMY_BUILDER_EDGE_THRESHOLD = .4
    TAXONOMY_BUILDER_MAX_RELATED = 5
    FUSE_ALPHA = .8
    FUSE_THRESHOLD = .1

    # RULE_EXISTENCE_WEIGHT=0.9057708043822286  # 10.
    # RULE_NOT_PLAUSIBLE_IMPLIES_REMARKABLE_SIBLINGS_WEIGHT=0.9612447069873684  # 0.4136813802555934
    # RULE_NOT_PLAUSIBLE_IMPLIES_REMARKABLE_WEIGHT=0.08039794692796742  # 0.8385061349318154
    # RULE_PLAUSIBILITY_INFERENCE_WEIGHT=0.46630539119453307  # 0.8899064124827547
    # RULE_PLAUSIBILITY_INHERITANCE_WEIGHT=0.06732045229164535  # 0.09630439631215232
    # RULE_REMARKABILITY_INHERITANCE_WEIGHT=0.47135500922967766  # 0
    # RULE_REMARKABILITY_SIBLINGS_WEIGHT=0.5319344213578103  # 0.01
    # RULE_SALIENT_IMPLIES_PLAUSIBLE_WEIGHT=0.08018597590900482  # 0.10873639531265827
    # RULE_SIMILARITY_WEIGHT=0.03680092596979894  # 0.9843530983393707
    # RULE_TYPICALITY_INFERENCE_WEIGHT=0.06545874790015815  # 0.42207454477107076
    # RULE_TYPICALITY_INHERITANCE_WEIGHT=0.49319159467358326  # 0.5266373056914903
    # RULE_TYPICAL_AND_REMARKABLE_IMPLY_SALIENT_WEIGHT=0.9180121694531342  # 0
    # RULE_TYPICAL_IMPLIES_PLAUSIBLE_WEIGHT=0.4234586998506514  # 0.5446133523460819
    # RULE_TYPICAL_PREVENTS_REMARKABLE_SIBLINGS_WEIGHT=0.49833318556337347  # 0.0331447944410993
    # RULE_TYPICAL_PREVENTS_REMARKABLE_WEIGHT=0.9041186936581108  # 0.05332233624133091
    # EVIDENCE_OFFSET = 0.985851612506589 # 1.3396791371188632

    RULE_EXISTENCE_WEIGHT=0.47895367546625034
    RULE_NOT_PLAUSIBLE_IMPLIES_REMARKABLE_SIBLINGS_WEIGHT=0.6009261898030485
    RULE_NOT_PLAUSIBLE_IMPLIES_REMARKABLE_WEIGHT=0.4193412402920291
    RULE_PLAUSIBILITY_INFERENCE_WEIGHT=0.6648877322142868
    RULE_PLAUSIBILITY_INHERITANCE_WEIGHT=0.09336989984060662
    RULE_REMARKABILITY_INHERITANCE_WEIGHT=0.5753368086260675
    RULE_REMARKABILITY_SIBLINGS_WEIGHT=0.1327278503075039
    RULE_SALIENT_IMPLIES_PLAUSIBLE_WEIGHT=0.28168338813793403
    RULE_SIMILARITY_WEIGHT=0.8534278251880139
    RULE_TYPICALITY_INFERENCE_WEIGHT=0.2220215683165805
    RULE_TYPICALITY_INHERITANCE_WEIGHT=0.48493682437799424
    RULE_TYPICAL_AND_REMARKABLE_IMPLY_SALIENT_WEIGHT=0.13890180987935907
    RULE_TYPICAL_IMPLIES_PLAUSIBLE_WEIGHT=0.4789779785513105
    RULE_TYPICAL_PREVENTS_REMARKABLE_SIBLINGS_WEIGHT=0.13571620174176824
    RULE_TYPICAL_PREVENTS_REMARKABLE_WEIGHT=0.5100631621238145
    EVIDENCE_OFFSET=0.0

    DUMMY_INJECTER_THRESHOLD = 0
    DUMMY_INJECTER_SOURCE = "DUMMY"

    # ConceptNet
    COEF_PLAUSIBLE_ENTROPY = 0.07319310712581154
    COEF_PLAUSIBLE_JOINT = 761462.151478788
    COEF_PLAUSIBLE_NECESSITY = -3.804745786732383
    COEF_PLAUSIBLE_SUFFICIENCY = -0.4385799410229083
    COEF_PLAUSIBLE_IMPLICATION = -8.563788354368626
    COEF_PLAUSIBLE_CONTRADICTION = 0.054703906062059104
    COEF_PLAUSIBLE_ENTAILMENT = 0.1711135775403818
    COEF_PLAUSIBLE_INTERCEPT = 8.976384686940419
    COEF_TYPICAL_ENTROPY = 0.026133454201674688
    COEF_TYPICAL_JOINT = -2105291.702746237
    COEF_TYPICAL_NECESSITY = -21.810199417310287
    COEF_TYPICAL_SUFFICIENCY = 0.6671210307395086
    COEF_TYPICAL_IMPLICATION = -23.868703607996395
    COEF_TYPICAL_CONTRADICTION = -0.0010749581269919872
    COEF_TYPICAL_ENTAILMENT = -0.3267008303082548
    COEF_TYPICAL_INTERCEPT = 24.451817729183173
    COEF_REMARKABLE_ENTROPY = -0.044122616549911835
    COEF_REMARKABLE_JOINT = 2702355.3362207045
    COEF_REMARKABLE_NECESSITY = 34.830161827936536
    COEF_REMARKABLE_SUFFICIENCY = -0.326262857648544
    COEF_REMARKABLE_IMPLICATION = 54.22900918760752
    COEF_REMARKABLE_CONTRADICTION = -0.31541616888716817
    COEF_REMARKABLE_ENTAILMENT = 0.0086439618607983
    COEF_REMARKABLE_INTERCEPT = -53.68324856480977
    COEF_SALIENT_ENTROPY = -0.06467030769806702
    COEF_SALIENT_JOINT = 391185.52686741523
    COEF_SALIENT_NECESSITY = 26.38798635520652
    COEF_SALIENT_SUFFICIENCY = -0.1581788669427624
    COEF_SALIENT_IMPLICATION = -16.660352451670406
    COEF_SALIENT_CONTRADICTION = -0.19796256214613095
    COEF_SALIENT_ENTAILMENT = 0.19467371674545575
    COEF_SALIENT_INTERCEPT = 17.175022650742903

    """ # TupleKb
    COEF_PLAUSIBLE_ENTROPY = -0.04987918830472807
    COEF_PLAUSIBLE_JOINT = 311976.87449929025
    COEF_PLAUSIBLE_NECESSITY = 6.1793926890559305
    COEF_PLAUSIBLE_SUFFICIENCY = -0.9504669685593399
    COEF_PLAUSIBLE_IMPLICATION = 15.324688188365599
    COEF_PLAUSIBLE_CONTRADICTION = 0.05749805737286806
    COEF_PLAUSIBLE_ENTAILMENT = -0.07660015844157897
    COEF_PLAUSIBLE_INTERCEPT = -14.792793890725614
    COEF_TYPICAL_ENTROPY = -0.017407748260427455
    COEF_TYPICAL_JOINT = 81599.20696368648
    COEF_TYPICAL_NECESSITY = 10.571848980287314
    COEF_TYPICAL_SUFFICIENCY = -1.9526599097034705
    COEF_TYPICAL_IMPLICATION = -3.70823421812338
    COEF_TYPICAL_CONTRADICTION = -0.08391765942360507
    COEF_TYPICAL_ENTAILMENT = -0.16276577817916404
    COEF_TYPICAL_INTERCEPT = 4.303730057945409
    COEF_REMARKABLE_ENTROPY = -0.003379652445919922
    COEF_REMARKABLE_JOINT = -389514.310965462
    COEF_REMARKABLE_NECESSITY = 4.083558305585029
    COEF_REMARKABLE_SUFFICIENCY = -0.39096172655990813
    COEF_REMARKABLE_IMPLICATION = -32.50182417197084
    COEF_REMARKABLE_CONTRADICTION = 0.4200970521196723
    COEF_REMARKABLE_ENTAILMENT = 0.4612309020012617
    COEF_REMARKABLE_INTERCEPT = 32.72272629285286
    COEF_SALIENT_ENTROPY = -0.022424434655874053
    COEF_SALIENT_JOINT = 449113.62393050693
    COEF_SALIENT_NECESSITY = 8.724405138063048
    COEF_SALIENT_SUFFICIENCY = 1.1943625714702648
    COEF_SALIENT_IMPLICATION = 21.002696410484532
    COEF_SALIENT_CONTRADICTION = -0.30640876572579145
    COEF_SALIENT_ENTAILMENT = 0.04821542341960594
    COEF_SALIENT_INTERCEPT = -20.47372922802204
    """

    """ # Quasimodo
    COEF_PLAUSIBLE_ENTROPY = 0.057325697548629484
    COEF_PLAUSIBLE_JOINT = 3.430006050892992e-05
    COEF_PLAUSIBLE_NECESSITY = 3.4299967219807886e-05
    COEF_PLAUSIBLE_SUFFICIENCY = 3.4299967026521296e-05
    COEF_PLAUSIBLE_IMPLICATION = -34.09393424236311
    COEF_PLAUSIBLE_CONTRADICTION = -0.18592252282845945
    COEF_PLAUSIBLE_ENTAILMENT = -0.13618785727291294
    COEF_PLAUSIBLE_INTERCEPT = 34.660090449856774
    COEF_TYPICAL_ENTROPY = 0.0019677142700154897
    COEF_TYPICAL_JOINT = 1.0101293194020844e-05
    COEF_TYPICAL_NECESSITY = 1.010111524513397e-05
    COEF_TYPICAL_SUFFICIENCY = 1.0101114876558507e-05
    COEF_TYPICAL_IMPLICATION = -65.03377653389643
    COEF_TYPICAL_CONTRADICTION = -0.2646211880422985
    COEF_TYPICAL_ENTAILMENT = -0.35360872029861373
    COEF_TYPICAL_INTERCEPT = 65.68744902563506
    COEF_REMARKABLE_ENTROPY = -0.01416642991318419
    COEF_REMARKABLE_JOINT = -2.471757355044837e-06
    COEF_REMARKABLE_NECESSITY = -2.4718538730501544e-06
    COEF_REMARKABLE_SUFFICIENCY = -2.4718540730427393e-06
    COEF_REMARKABLE_IMPLICATION = -35.27369936012419
    COEF_REMARKABLE_CONTRADICTION = -0.19676787683123187
    COEF_REMARKABLE_ENTAILMENT = 0.12746727944467584
    COEF_REMARKABLE_INTERCEPT = 35.81915268762019
    COEF_SALIENT_ENTROPY = 0.008315433760915864
    COEF_SALIENT_JOINT = -9.495792056304458e-08
    COEF_SALIENT_NECESSITY = -9.514493759306368e-08
    COEF_SALIENT_SUFFICIENCY = -9.51453250254899e-08
    COEF_SALIENT_IMPLICATION = -68.34784160046767
    COEF_SALIENT_CONTRADICTION = -0.521048303864094
    COEF_SALIENT_ENTAILMENT = -0.20129307488883966
    COEF_SALIENT_INTERCEPT = 69.06605522311392
    """

    def process(**args):
        attributes = {
            name.lower(): (name, type(default))
            for name, default in Parameters.__dict__.items()
            if not (name.startswith("__") and name.endswith("__"))
        }
        for key, value in args.items():
            if key.lower() in attributes:
                attr_name, attr_type = attributes[key.lower()]
                setattr(Parameters, attr_name, convert(value, attr_type))
